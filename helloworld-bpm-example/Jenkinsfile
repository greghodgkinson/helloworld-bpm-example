pipeline {

    agent {
    
    	label 'buildconductor-bpm'
    //    docker { 
    //      image 'greghodgkinson/jenkins-buildconductor-bpm'                 
    //    }
    }
    
    stages {     
        
        stage('Build') {
        
        def userInput = true
def didTimeout = false
try {
    timeout(time: 15, unit: 'SECONDS') { // change to a convenient timeout for you
        userInput = input(
        id: 'Proceed1', message: 'Was this successful?', parameters: [
        [$class: 'BooleanParameterDefinition', defaultValue: true, description: '', name: 'Please confirm you agree with this']
        ])
    }
} catch(err) { // timeout reached or input false
    def user = err.getCauses()[0].getUser()
    if('SYSTEM' == user.toString()) { // SYSTEM means timeout.
        didTimeout = true
    } else {
        userInput = false
        echo "Aborted by: [${user}]"
    }
}

node {
    if (didTimeout) {
        // do something on timeout
        echo "no input was received before timeout"
    } else if (userInput == true) {
        // do something
        echo "this was successful"
    } else {
        // do something else
        echo "this was not successful"
        currentBuild.result = 'FAILURE'
    } 
}
        
            steps {
            
            
            	
                               
            	sh '/buildconductor/bpm/run-automation-bpm.sh build HW ${snapshot} Main 10.0.10.166 20005 ghodgkinson ghodgkinson Staging ghodgkinson passw0rd ${BUILD_NUMBER} ${BUILD_URL} ${NODE_NAME}'               
            }
        }
        
        stage('Publish to UCD') {
        	steps {
        	
        	sh "echo Publish to UCD comes next..."               
            }                        	 	
        }
    }
}